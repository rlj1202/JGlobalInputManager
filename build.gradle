apply plugin: 'java'

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources {
			srcDir 'src/main/java'
		}
	}
}

processResources {
	dependsOn ':NativeLibrary:build'
	
	copy {
		from("${project(":NativeLibrary").buildDir}/libs/globalHook/shared/x86/GlobalHook.dll") {
			rename { fileName -> "lib" + fileName.substring(0, fileName.lastIndexOf('.')) + "32.dll" }
		}
		from("${project(":NativeLibrary").buildDir}/libs/globalHook/shared/x64/GlobalHook.dll") {
			rename { fileName -> "lib" + fileName.substring(0, fileName.lastIndexOf('.')) + "64.dll" }
		}
		
		from("${project(":NativeLibrary").buildDir}/libs/globalInput/shared/x86/GlobalInput.dll") {
			rename { fileName -> "lib" + fileName.substring(0, fileName.lastIndexOf('.')) + "32.dll" }
		}
		from("${project(":NativeLibrary").buildDir}/libs/globalInput/shared/x64/GlobalInput.dll") {
			rename { fileName -> "lib" + fileName.substring(0, fileName.lastIndexOf('.')) + "64.dll" }
		}
		
		into 'src/main/java/redlaboratory/globalinputmanager/lib/windows'
	}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def title = 'JGlobalInputManager'
version = '0.1.0'

jar {
	manifest {
		attributes 'Title': title, 'Version': version
	}

	from sourceSets.main.output
	from 'README.md'
	
	exclude 'redlaboratory/globalinputmanager/test/**'
	
	baseName = title
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.2.1'
}
