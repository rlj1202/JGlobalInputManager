apply plugin: 'java'
apply plugin: 'jvm-component'
apply plugin: 'java-lang'

model {
	components {
		JGlobalInputManager(JvmLibrarySpec) {
			targetPlatform 'java8'
			
			sources {
				java {
					source {
						srcDir 'src/main/java'
					}					
				}
				resources {
					source {
						srcDir 'src/main/java'
					}
				}
			}
		}
	}
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources {
			srcDir 'src/main/java'
		}
	}
}

tasks.processResources.dependsOn 'copyResources'

task copyResources(type: Copy, dependsOn: ':NativeLibrary:build') {
	from("${project(":NativeLibrary").buildDir}/libs/globalHook/shared/x86/GlobalHook.dll") {
		rename { fileName -> "lib" + fileName.substring(0, fileName.lastIndexOf('.')) + "32.dll" }
	}
	from("${project(":NativeLibrary").buildDir}/libs/globalHook/shared/x64/GlobalHook.dll") {
		rename { fileName -> "lib" + fileName.substring(0, fileName.lastIndexOf('.')) + "64.dll" }
	}
	
	from("${project(":NativeLibrary").buildDir}/libs/globalInput/shared/x86/GlobalInput.dll") {
		rename { fileName -> "lib" + fileName.substring(0, fileName.lastIndexOf('.')) + "32.dll" }
	}
	from("${project(":NativeLibrary").buildDir}/libs/globalInput/shared/x64/GlobalInput.dll") {
		rename { fileName -> "lib" + fileName.substring(0, fileName.lastIndexOf('.')) + "64.dll" }
	}
	
	into 'src/main/java/redlaboratory/globalinputmanager/lib/windows'
}

sourceCompatibility = 1.8

title = 'JGlobalInputManager'
version = '1.0'

task release(type: Jar) {
	manifest {
		attributes 'Title': title, 'Version': version
	}

	from sourceSets.main.output
	from 'README.md'
	
	exclude 'redlaboratory/globalinputmanager/test/**'
	
	baseName = 'JGlobalInputManager'
}
